version: "3.8"
services:
  minecraft:
    image: itzg/minecraft-server
    container_name: minecraft
    user: ${USER_ID}:${GROUP_ID}
    # Restart on crash, retry 5 times
    restart: on-failure:5
    ports:
      - "${MINECRAFT_PORT}:25565"
    volumes:
      - ${DATA_ROOT}/minecraft:/data
      - ./config:/config
      - ./datapacks:/datapacks
    environment:
      - TYPE=FABRIC
      # CSV list of mods to install from Modrinth
      - MODRINTH_PROJECTS=lithium

      - DATAPACKS=/datapacks
      - REMOVE_OLD_DATAPACKS=true
      # TODO: Download vanilla tweaks packs through the image
      # https://docker-minecraft-server.readthedocs.io/en/latest/misc/world-data/#datapacks
      # Remove this line when done
      - REMOVE_OLD_DATAPACKS_INCLUDE=crafting_tweaks.zip

      # Pause the server 1 hour after the last player leaves
      - ENABLE_AUTOPAUSE=true
      - EXISTING_OPS_FILE=SYNCHRONIZE
      - EXISTING_WHITELIST_FILE=SYNCHRONIZE
      # Required to avoid a "tick took too long" crash after a pause
      - MAX_TICK_TIME=-1
      - MOTD=A Minecraft Server Powered by Docker

      # Public user settings, configured in `environment.yml`
      - VIEW_DISTANCE=${MINECRAFT_VIEW_DISTANCE}

      # Secret user settings, configured in `userenv.yml`
      - EULA=${MINECRAFT_EULA}
      - OPS=${MINECRAFT_OPS}
      - WHITELIST=${MINECRAFT_WHITELIST}
      - RESOURCE_PACK=${MINECRAFT_RESOURCE_PACK}
      - RESOURCE_PACK_SHA1=${MINECRAFT_RESOURCE_PACK_SHA1}
  # We run Bluemap in its own container to avoid it going down when the server is paused
  bluemap:
    image: ghcr.io/bluemap-minecraft/bluemap:latest
    container_name: bluemap
    restart: unless-stopped
    ports:
      - "${MINECRAFT_BLUEMAP_PORT}:8100"
    volumes:
      - ./config/bluemap:/app/config
      - ${DATA_ROOT}/minecraft/map/map:/app/web/maps
      - ${DATA_ROOT}/minecraft/map/data:/app/data
      - ${DATA_ROOT}/minecraft/world:/app/world
      # - ${DATA_ROOT}/minecraft/bluemap:/var/lib/bluemap
      # - ${DATA_ROOT}/minecraft:/var/lib/minecraft:ro
    command: --render --watch --webserver --mc-version ${MINECRAFT_VERSION}
